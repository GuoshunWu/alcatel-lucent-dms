<?xml version="1.0" encoding="utf-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
                      http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0"
         metadata-complete="false">

    <display-name>Welcome to DMS</display-name>
    <description>
        Dictionary Management System
    </description>
    
    <session-config>
    	<session-timeout>60</session-timeout>
    </session-config>
    <!--
    The Spring plugin can be configured to automatically reload classes that change in the file system.
    This feature will enable code changes to be "hot deployed" without having to restart the web container.
    To enable this feature follow these steps:

    Set "struts.devMode" to "true"
    Set "struts.class.reloading.watchList" to a comma separated list of directories, or jar files (absolute or relative paths)
    Add this to web.xml:
    -->
    <!--<context-param>-->
    <!--<param-name>contextClass</param-name>-->
    <!--<param-value>org.apache.struts2.spring.ClassReloadingXMLWebApplicationContext</param-value>-->
    <!--</context-param>-->

    <!-- Load Spring -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:spring.xml</param-value>
    </context-param>


    <!--<filter>-->
    <!--<filter-name>springSecurityFilterChain</filter-name>-->
    <!--<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>-->
    <!--</filter>-->

    <!--<filter-mapping>-->
    <!--<filter-name>springSecurityFilterChain</filter-name>-->
    <!--<url-pattern>/*</url-pattern>-->
    <!--</filter-mapping>-->

    <!--process request encoding -->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>
            org.springframework.web.filter.CharacterEncodingFilter
        </filter-class>
        <async-supported>true</async-supported>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <!--login check-->
    <filter>
        <filter-name>authenticationFilter</filter-name>
        <filter-class>com.alcatel_lucent.dms.filters.AuthenticationFilter</filter-class>
        <async-supported>true</async-supported>
        <!-- exclude patterns URL, which are regular expression separated by comma-->
        <init-param>
            <description>
                This parameter include the pattern list separated by comma, the uri in which will not be
                ignored by this filter.
            </description>
            <param-name>excludePatterns</param-name>
            <param-value>
                /entry\.action\?login\.jsp,/login\.action.*,
                /login/forward-to-https,
                /test/.*,/scripts/.*,/json/.*,/manual/.*,/release_notes.txt,.*\.js,.*\.map,.*\.coffee,.*\.css,.*images.*,.*\.ico
            </param-value>
        </init-param>
        <init-param>
            <description>This parameter include the pattern list separated by comma, the uri in which will
                send specific response to client.
            </description>
            <param-name>ajaxURIs</param-name>
            <param-value>
                /test/.*,/rest/.*,/app/.*,/trans/.*,/task/.*,/admin/.*
            </param-value>
        </init-param>

        <init-param>
            <param-name>authURL</param-name>
            <param-value>/login/forward-to-https</param-value>
        </init-param>

    </filter>

    <filter-mapping>
        <filter-name>authenticationFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>struts2</filter-name>
        <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
        <async-supported>true</async-supported>
    </filter>

    <filter-mapping>
        <filter-name>struts2</filter-name>
        <!--<url-pattern>/*</url-pattern>-->
        <url-pattern>/app/*</url-pattern>
        <url-pattern>/trans/*</url-pattern>
        <url-pattern>/task/*</url-pattern>
        <url-pattern>/login/*</url-pattern>
        <url-pattern>/admin/*</url-pattern>
        <url-pattern>*.action</url-pattern>
        <url-pattern>*.jsp</url-pattern>
    </filter-mapping>

    <!-- Listening Log4j -->
    <!--<listener>-->
    <!--<listener-class>-->
    <!--org.springframework.web.util.Log4jConfigListener-->
    <!--</listener-class>-->
    <!--</listener>-->

    <listener>
        <listener-class>
            org.springframework.web.context.request.RequestContextListener
        </listener-class>
    </listener>

    <!-- Listening Spring -->
    <listener>
        <listener-class>
            org.springframework.web.context.ContextLoaderListener
        </listener-class>
    </listener>


    <servlet>
        <servlet-name>Jersey Spring Web Application</servlet-name>
        <servlet-class>com.sun.jersey.spi.spring.container.servlet.SpringServlet</servlet-class>

        <!-- The following initialization parameter is only required for
             registering Jersey managed classes. Spring-managed classes
             are automatically registered.
        -->
        <init-param>
            <param-name>com.sun.jersey.config.property.packages</param-name>
            <param-value>com.alcatel_lucent.dms.resources</param-value>
        </init-param>

        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>Jersey Spring Web Application</servlet-name>
        <url-pattern>/rest/*</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>GroovyServlet</servlet-name>
        <servlet-class>groovy.servlet.GroovyServlet</servlet-class>
        <async-supported>true</async-supported>
    </servlet>

    <servlet-mapping>
        <servlet-name>GroovyServlet</servlet-name>
        <url-pattern>*.groovy</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>GSP</servlet-name>
        <servlet-class>groovy.servlet.TemplateServlet</servlet-class>
        <!--<servlet-class>groovy.modules.pages.GroovyPages</servlet-class>-->
        <async-supported>true</async-supported>
    </servlet>
    
    <servlet-mapping>
        <servlet-name>GSP</servlet-name>
        <url-pattern>*.gsp</url-pattern>
    </servlet-mapping>


    <servlet>
        <servlet-name>proxoolAdmin</servlet-name>
        <servlet-class>org.logicalcobwebs.proxool.admin.servlet.AdminServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>proxoolAdmin</servlet-name>
        <url-pattern>/padmin</url-pattern>
    </servlet-mapping>

    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>

</web-app>