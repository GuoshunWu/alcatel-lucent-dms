// Generated by CoffeeScript 1.3.3
(function() {

  define(['jqlayout', 'taskmng/task_grid', 'i18n!nls/common', 'taskmng/dialogs', 'require'], function($, grid, c18n, dialogs, require) {
    var info, pathArray, taskFileUpload;
    pathArray = window.location.pathname.split('/');
    $('#pageNavigator').val(pathArray[pathArray.length - 1]);
    $("#optional-container").layout({
      resizable: true,
      closable: true
    });
    info = {};
    if (window.location.search) {
      $(window.location.search.split('?')[1].split('&')).each(function(index, elem) {
        var kv;
        kv = elem.split('=');
        return info[kv[0]] = unescape(kv[1]);
      });
    }
    $.getJSON('rest/products', {
      prop: 'id,name'
    }, function(json) {
      return $('#productBase').append(new Option(c18n.select.product.tip, -1)).append($(json).map(function() {
        return $(new Option(this.name, this.id)).attr('selected', info.productBase && this.id === parseInt(info.productBase))[0];
      })).trigger('change');
    });
    $('#productBase').change(function() {
      $('#productRelease').empty();
      if (parseInt($('#productBase').val()) === -1) {
        return false;
      }
      return $.getJSON("rest/products/version", {
        base: $(this).val(),
        prop: 'id,version'
      }, function(json) {
        return $('#productRelease').append(new Option(c18n.select.release.tip, -1)).append($(json).map(function() {
          return $(new Option(this.version, this.id)).attr('selected', info.product && this.id === parseInt(info.product))[0];
        }));
      });
    });
    $('#productRelease').change(function() {
      var param;
      param = {
        release: {
          id: $(this).val(),
          version: $(this).find("option:selected").text()
        }
      };
      if (!param.release.id || parseInt(param.release.id) === -1) {
        return false;
      }
      return grid.productVersionChanged(param);
    });
    ($("#progressbar").draggable({
      grid: [50, 20],
      opacity: 0.35
    }).css({
      'z-index': 100,
      width: 600,
      textAlign: 'center',
      'position': 'absolute',
      'top': '45%',
      'left': '30%'
    }).progressbar({
      change: function(e, ui) {
        var value;
        value = ($(this).progressbar("value")).toPrecision(4) + '%';
        return $('#barvalue', this).html(value).css({
          "display": "block",
          "textAlign": "center"
        });
      }
    })).hide();
    taskFileUpload = 'taskFileUpload';
    $('#uploadTask').button({
      label: 'Upload'
    }).css({
      overflow: 'hidden'
    }).append($("<input type='file' id='" + taskFileUpload + "' name='upload' title='Choose file' multiple/>").css({
      position: 'absolute',
      top: 0,
      right: 0,
      margin: 0,
      border: '1px transparent',
      borderWidth: '0 0 40px 0px',
      opacity: 0,
      filter: 'alpha(opacity=0)',
      cursor: 'pointer'
    }));
    $('#optional-container').show();
    return $('#loading-container').remove();
  });

}).call(this);
