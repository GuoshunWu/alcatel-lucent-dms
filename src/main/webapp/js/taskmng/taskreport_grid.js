// Generated by CoffeeScript 1.3.3
(function() {

  define(['jqgrid', 'util', 'require'], function($, util, require) {
    var colModel, colNames, grid, groupHeader;
    colNames = ['Dictionary', 'Total'];
    colModel = [
      {
        name: 'name',
        index: 'dict',
        width: 500,
        editable: false,
        stype: 'select',
        align: 'left',
        frozen: true
      }, {
        name: 'total',
        index: 'total',
        width: 90,
        editable: false,
        align: 'right',
        frozen: true
      }
    ];
    groupHeader = [];
    grid = $("#reportGrid").jqGrid({
      url: 'json/transreportgrid.json',
      mtype: 'POST',
      postData: {},
      editurl: "",
      datatype: 'json',
      width: $(window).width() * 0.6,
      height: 200,
      shrinkToFit: false,
      pager: '#reportPager',
      rowNum: 60,
      rowList: [30, 60, 120],
      sortname: 'key',
      sortorder: 'asc',
      viewrecords: true,
      gridview: true,
      multiselect: false,
      cellEdit: true,
      cellurl: '',
      colNames: colNames,
      colModel: colModel,
      groupHeaders: groupHeader,
      afterCreate: function(grid) {
        grid.setGroupHeaders({
          useColSpanStyle: true,
          groupHeaders: grid.getGridParam('groupHeaders')
        });
        grid.navGrid('#reportPager', {
          edit: false,
          add: false,
          del: false,
          search: false,
          view: false
        });
        return grid.setFrozenColumns();
      }
    });
    grid.getGridParam('afterCreate')(grid);
    return {
      regenerateGrid: function(params) {
        var cols, gridId, gridParam, newGrid;
        gridId = '#reportGrid';
        gridParam = $(gridId).jqGrid('getGridParam');
        $(gridId).GridUnload('reportGrid');
        cols = ['T', 'N'];
        gridParam.colNames = colNames.slice(0);
        gridParam.colModel = colModel.slice(0);
        gridParam.groupHeader = groupHeader.slice(0);
        $(params.languages).each(function(index, language) {
          $.merge(gridParam.colNames, cols);
          $.merge(gridParam.colModel, $(cols).map(function(index) {
            return {
              name: "" + language.name + "." + this,
              sortable: false,
              index: "s(" + language.id + ")[" + index + "]",
              width: 40,
              editable: false,
              align: 'center'
            };
          }).get());
          return gridParam.groupHeaders.push({
            startColumnName: "" + language.name + ".T",
            numberOfColumns: cols.length,
            titleText: "<bold>" + language.name + "</bold>"
          });
        });
        gridParam.url = '/rest/task/summary';
        gridParam.postData = {
          task: params.id,
          format: 'grid',
          prop: 'context.name,' + $(params.languages).map(function(index, language) {
            return $([0, 1]).map(function(idx) {
              return "s(" + language.id + ")[" + idx + "]";
            }).get().join(',');
          }).get().join(',')
        };
        delete gridParam.selarrrow;
        newGrid = $(gridId).jqGrid(gridParam);
        return gridParam.afterCreate(newGrid);
      }
    };
  });

}).call(this);
