// Generated by CoffeeScript 1.6.2
(function() {
  define(['jqgrid', 'i18n!nls/common', 'dms-util', 'dms-urls', 'taskmng/task_grid', 'taskmng/dialogs'], function($, c18n, util, urls, grid) {
    var init, nodeSelectHandler, onShow, ready;

    nodeSelectHandler = function(node, nodeInfo) {
      var type;

      type = node.attr('type');
      if ('products' === type) {
        return;
      }
      if (type === 'product') {
        type = 'prod';
      }
      $('#versionTypeLabel', "div[id='taskmng']").text("" + nodeInfo.text);
      $('#typeLabel', "div[id='taskmng']").text("" + (c18n[type].capitalize()) + ": ");
      if ('prod' === type) {
        $.getJSON(urls.prod_versions, {
          base: nodeInfo.id,
          prop: 'id,version'
        }, function(json) {
          return $('#selVersion', "div[id='taskmng']").empty().append(util.json2Options(json)).trigger('change');
        });
        return;
      }
      if ('app' === type) {
        return $.getJSON("" + urls.app_versions + nodeInfo.id, function(json) {
          return $('#selVersion', "div[id='taskmng']").empty().append(util.json2Options(json)).trigger('change');
        });
      }
    };
    onShow = function() {
      var gridParent;

      gridParent = $('.taskGrid_parent');
      return $('#taskGrid').setGridWidth(gridParent.width() - 10).setGridHeight(gridParent.height() - 110);
    };
    init = function() {};
    ready = function(param) {
      return $('#selVersion', '#taskmng').change(function() {
        var nodeInfo, postData, type;

        nodeInfo = util.getProductTreeInfo();
        type = nodeInfo.type;
        postData = {
          prop: 'id,name'
        };
        postData[type] = this.value;
        param = {
          release: {
            id: $(this).val() ? $(this).val() : -1,
            version: $(this).find("option:selected").text()
          },
          base: nodeInfo.text,
          type: type
        };
        if (!param.release.id || parseInt(param.release.id) === -1) {
          return false;
        }
        return grid.versionChanged(param);
      });
    };
    init();
    ready(this);
    return {
      onShow: onShow,
      nodeSelect: nodeSelectHandler
    };
  });

}).call(this);
