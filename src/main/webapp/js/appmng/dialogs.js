// Generated by CoffeeScript 1.3.3
(function() {

  define(['jqueryui', 'jqmsgbox', 'i18n!nls/common'], function($, msgbox, c18n) {
    var ids, langSetting, newOrAddApplication, newProduct, newProductRelease,
      _this = this;
    ids = {
      button: {
        new_product: 'newProduct',
        new_release: 'newVersion'
      },
      dialog: {
        new_product: 'newProductDialog',
        new_product_release: 'newProductReleaseDialog',
        new_or_add_application: 'newOrAddApplicationDialog'
      },
      productName: '#productName',
      product_duplication: '#dupVersion'
    };
    newProduct = $("#" + ids.dialog.new_product).dialog({
      autoOpen: false,
      height: 200,
      width: 400,
      modal: true,
      buttons: [
        {
          text: c18n.ok,
          click: function() {
            $.post('app/create-product', {
              name: $(ids.productName).val()
            }, function(json) {
              if (json.status !== 0) {
                $.msgBox(json.message, null, {
                  title: c18n.error,
                  width: 300,
                  height: 'auto'
                });
                return false;
              }
              return (require('appmng/apptree')).addNewProductBase({
                name: $(ids.productName).val(),
                id: json.id
              });
            });
            return $(this).dialog("close");
          }
        }, {
          text: c18n.cancel,
          click: function() {
            return $(this).dialog("close");
          }
        }
      ]
    });
    $("#" + ids.button.new_product).button().click(function(e) {
      return newProduct.dialog("open");
    });
    newProductRelease = $("#" + ids.dialog.new_product_release).dialog({
      autoOpen: false,
      height: 200,
      width: 500,
      modal: true,
      buttons: [
        {
          text: c18n.ok,
          click: function() {
            var dupVersionId, productBaseId, url, versionName;
            url = 'app/create-product-release';
            versionName = $('#versionName').val();
            dupVersionId = $("#dupVersion").val();
            productBaseId = (require('appmng/apptree')).getSelected().id;
            $.post(url, {
              version: versionName,
              dupVersionId: dupVersionId,
              id: productBaseId
            }, function(json) {
              if (json.status !== 0) {
                $.msgBox(json.message, null, {
                  title: c18n.error,
                  width: 300,
                  height: 'auto'
                });
                return;
              }
              return (require('appmng/product_panel')).addNewProduct({
                version: versionName,
                id: json.id
              });
            });
            return $(this).dialog("close");
          }
        }, {
          text: c18n.cancel,
          click: function() {
            return $(this).dialog("close");
          }
        }
      ],
      open: function(event, ui) {
        $(ids.product_duplication).append(new Option('', -1));
        return (require('appmng/product_panel')).getProductSelectOptions().appendTo($(ids.product_duplication));
      }
    });
    $("#" + ids.button.new_release).button({
      text: false,
      icons: {
        primary: "ui-icon-plus"
      }
    }).click(function(e) {
      return newProductRelease.dialog("open");
    });
    newOrAddApplication = $("#" + ids.dialog.new_or_add_application).dialog({
      autoOpen: false,
      height: 200,
      width: 400,
      modal: true,
      position: "center",
      show: {
        effect: 'drop',
        direction: "up"
      },
      create: function(event, ui) {
        var input;
        input = $('<input>').insertAfter($('#applicationName')).hide();
        $('#applicationName').data('myinput', input);
        input = $('<input>').insertAfter($("#version")).hide();
        $('#version').data('myinput', input);
        $("select", this).css('width', "80px");
        $("#applicationName").change(function() {
          var appBaseId, url;
          $("#version").empty().append(new Option('new', -1));
          appBaseId = $(this).val();
          if (-1 === parseInt(appBaseId)) {
            $(this).data('myinput').val("").show();
            $("#version").trigger("change");
            return;
          }
          $(this).data('myinput').hide();
          url = "rest/applications/apps/" + appBaseId;
          return $.getJSON(url, {}, function(json) {
            return $("#version").append($(json).map(function() {
              return new Option(this.version, this.id);
            })).trigger("change");
          });
        });
        return $("#version").change(function() {
          var appId;
          appId = $(this).val();
          if (-1 === parseInt(appId)) {
            $(this).data('myinput').val("").show();
            return;
          }
          return $(this).data('myinput').hide();
        });
      },
      open: function(event, ui) {
        var productId, url;
        productId = $("#selVersion").val();
        url = "rest/applications/base/" + productId;
        return $.getJSON(url, {}, function(json) {
          var appBasesOptions;
          appBasesOptions = $("#newOrAddApplicationDialog").find("#applicationName").empty().append(new Option('new', -1));
          return appBasesOptions.append($(json).map(function() {
            return new Option(this.name, this.id);
          })).trigger('change');
        });
      },
      buttons: [
        {
          text: c18n.ok,
          click: function() {
            var params, url;
            url = 'app/create-or-add-application';
            params = {
              productId: parseInt($("#selVersion").val()),
              appBaseId: parseInt($('#applicationName').val()),
              appId: parseInt($('#version').val()),
              appBaseName: $('#applicationName').data('myinput').val(),
              appVersion: $('#version').data('myinput').val()
            };
            $.post(url, params, function(json) {
              if (json.status !== 0) {
                $.msgBox(json.message, null, {
                  title: c18n.error,
                  width: 300,
                  height: 'auto'
                });
                return;
              }
              if (-1 === params.appBaseId) {
                (require('appmng/apptree')).getSelected();
              }
              return $("#applicationGridList").trigger("reloadGrid");
            });
            return $(this).dialog("close");
          }
        }, {
          text: c18n.cancel,
          click: function() {
            return $(this).dialog("close");
          }
        }
      ]
    });
    langSetting = $('#languageSettingDialog').dialog({
      autoOpen: false,
      width: 500,
      height: 'auto',
      open: function(e, ui) {
        var param;
        param = $(this).data("param");
        $('#refCode').val(param.refCode);
        return $('#languageSettingGrid').setGridParam({
          url: 'rest/languages',
          postData: {
            dict: param.dictId,
            prop: 'language.name,languageCode,charset.name'
          }
        }).trigger("reloadGrid");
      }
    });
    return {
      newProduct: newProduct,
      newProductRelease: newProductRelease,
      newOrAddApplication: newOrAddApplication,
      langSetting: langSetting
    };
  });

}).call(this);
