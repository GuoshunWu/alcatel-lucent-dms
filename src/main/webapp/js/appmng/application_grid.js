// Generated by CoffeeScript 1.3.3
(function() {

  define(['jqgrid', 'i18n!nls/appmng', 'appmng/dialogs', 'util', 'require'], function($, i18n, dialogs, util, require) {
    var URL, appGrid, localIds;
    URL = {
      get_application_by_product_id: 'rest/applications'
    };
    localIds = {
      app_grid: '#applicationGridList'
    };
    appGrid = $(localIds.app_grid).jqGrid({
      datatype: 'local',
      url: 'json/dummy.json',
      editurl: "app/create-or-add-application",
      cellurl: 'app/change-application-version',
      cellsubmit: 'remote',
      cellEdit: true,
      width: 700,
      height: 350,
      pager: '#pager',
      rowNum: 10,
      rowList: [10, 20, 30],
      multiselect: true,
      sortname: 'name',
      sortorder: 'asc',
      viewrecords: true,
      gridview: true,
      altRows: true,
      caption: 'Applications for Product',
      colNames: ['ID', 'Application', 'Version', 'Dict. Num.'],
      colModel: [
        {
          name: 'id',
          index: 'id',
          width: 55,
          align: 'center',
          editable: false,
          hidden: true
        }, {
          name: 'name',
          index: 'name',
          width: 100,
          editable: false,
          align: 'left'
        }, {
          name: 'version',
          index: 'version',
          width: 90,
          editable: true,
          classes: 'editable-column',
          align: 'left',
          edittype: 'select',
          editoptions: {
            value: {}
          }
        }, {
          name: 'dictNum',
          index: 'dictNum',
          width: 80,
          editable: false,
          align: 'right'
        }
      ],
      afterEditCell: function(id, name, val, iRow, iCol) {
        if (name === 'version') {
          return $.ajax({
            url: "rest/applications/appssamebase/" + id,
            async: false,
            dataType: 'json',
            success: function(json) {
              return $("#" + iRow + "_version", localIds.app_grid).append(util.json2Options(json, val));
            }
          });
        }
      },
      beforeSubmitCell: function(rowid, cellname, value, iRow, iCol) {
        var prodpnl;
        prodpnl = require('appmng/product_panel');
        return {
          productId: prodpnl.getSelectedProduct().id,
          newAppId: value
        };
      },
      afterSubmitCell: function(serverresponse, rowid, cellname, value, iRow, iCol) {
        var jsonFromServer;
        jsonFromServer = eval("(" + serverresponse.responseText + ")");
        return [jsonFromServer.status === 0, jsonFromServer.message];
      }
    }).setGridParam({
      datatype: 'json'
    }).jqGrid('navGrid', '#pager', {
      edit: false,
      add: false,
      del: true,
      search: false,
      view: false
    }, {}, {}, {
      reloadAfterSubmit: false,
      url: 'app/remove-application',
      beforeShowForm: function(form) {},
      onclickSubmit: function(params, posdata) {
        var prodpnl, product;
        prodpnl = require('appmng/product_panel');
        product = prodpnl.getSelectedProduct();
        return {
          productId: product.id
        };
      },
      afterSubmit: function(response, postdata) {
        var jsonFromServer;
        jsonFromServer = eval("(" + response.responseText + ")");
        return [0 === jsonFromServer.status, jsonFromServer.message];
      }
    }).navButtonAdd('#pager', {
      caption: "",
      buttonicon: "ui-icon-plus",
      position: "first",
      onClickButton: function() {
        return dialogs.addApplication.dialog("open");
      }
    });
    return {
      id: localIds,
      productChanged: function(param) {
        appGrid.setCaption("Applications for Product " + param.base.text + " version " + param.product.version);
        return appGrid.setGridParam({
          url: URL.get_application_by_product_id,
          postData: {
            prod: param.product.id,
            format: 'grid',
            prop: 'id,name,version,dictNum'
          }
        }).trigger("reloadGrid");
      }
    };
  });

}).call(this);
