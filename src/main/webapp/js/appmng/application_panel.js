// Generated by CoffeeScript 1.3.3
(function() {

  define(function(require) {
    var $, c18n, dctFileUpload, grid, i18n;
    $ = require('jqueryui');
    require('appmng/langsetting_grid');
    require('appmng/stringsettings_grid');
    require('jqupload');
    require('iframetransport');
    grid = require('appmng/dictionary_grid');
    i18n = require('i18n!nls/appmng');
    c18n = require('i18n!nls/appmng');
    $("#selAppVersion").change(function(e) {
      return grid.appChanged({
        version: $("option:selected", this).text(),
        id: this.value
      });
    });
    ($("#progressbar").draggable({
      grid: [50, 20],
      opacity: 0.35
    }).css({
      'z-index': 100,
      width: 600,
      textAlign: 'center',
      'position': 'absolute',
      'top': '45%',
      'left': '30%'
    }).progressbar({
      change: function(e, ui) {
        var value;
        value = ($(this).progressbar("value")).toPrecision(4) + '%';
        return $('#barvalue', this).html(value).css({
          "display": "block",
          "textAlign": "center"
        });
      }
    })).hide();
    dctFileUpload = 'dctFileUpload';
    $('#uploadBrower').button({
      label: i18n.browse
    }).css({
      overflow: 'hidden'
    }).append($("<input type='file' id='" + dctFileUpload + "' name='upload' title='" + i18n.choosefile + "' accept='application/zip' multiple/>").css({
      position: 'absolute',
      top: -3,
      right: -3,
      border: '1px solid',
      borderWidth: '1px 1px 10px 0px',
      opacity: 0,
      filter: 'alpha(opacity=0)',
      cursor: 'pointer'
    }));
    $("#" + dctFileUpload).fileupload({
      type: 'POST',
      url: 'app/deliver-app-dict',
      add: function(e, data) {
        $.each(data.files, function(index, file) {
          return $('#uploadStatus').html("" + i18n.uploadingfile + file.name);
        });
        data.submit();
        if (!$.browser.msie) {
          return $("#progressbar").show();
        }
      },
      progressall: function(e, data) {
        var progress;
        progress = data.loaded / data.total * 100;
        return $('#progressbar').progressbar("value", progress);
      },
      done: function(e, data) {
        var jsonFromServer;
        $.each(data.files, function(index, file) {
          return $('#uploadStatus').html("" + file.name + " " + i18n.uploadfinished);
        });
        if (!$.browser.msie) {
          $("#progressbar").hide();
        }
        jsonFromServer = eval("(" + data.result + ")");
        if (0 !== jsonFromServer.status) {
          $.msgBox(jsonFromServer.message, null, {
            title: c18n.error
          });
          return;
        }
        $('#dictListPreviewDialog').data('param', {
          handler: jsonFromServer.filename
        });
        return $('#dictListPreviewDialog').dialog('open');
      }
    });
    return {
      refresh: function(info) {
        $('#appDispProductName').html(info.parent.text);
        $('#appDispAppName').html(info.text);
        return $.getJSON("rest/applications/apps/" + info.id, {}, function(json) {
          $("#selAppVersion").empty().append($(json).map(function() {
            return new Option(this.version, this.id);
          }));
          return $("#selAppVersion").trigger("change");
        });
      }
    };
  });

}).call(this);
