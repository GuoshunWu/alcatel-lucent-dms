// Generated by CoffeeScript 1.3.3
(function() {

  define(function(require) {
    var $, URL, apppnl, ids, layout, productpnl;
    $ = require('jqtree');
    layout = require('appmng/layout');
    productpnl = require('appmng/product_panel');
    apppnl = require('appmng/application_panel');
    ids = {
      navigateTree: 'appTree'
    };
    URL = {
      navigateTree: 'rest/products?nocache=' + new Date().getTime()
    };
    $.getJSON(URL.navigateTree, {}, function(treeInfo) {
      $.jstree._themes = "css/jstree/themes/";
      return ($("#" + ids.navigateTree).jstree({
        json_data: {
          data: treeInfo
        },
        ui: {
          select_limit: 1
        },
        themes: {},
        core: {},
        plugins: ["themes", "json_data", "ui", "core"]
      })).bind("select_node.jstree", function(event, node) {
        var appTree, nodeInfo, parent;
        appTree = $.jstree._reference("#" + ids.navigateTree);
        parent = appTree._get_parent(node.rslt.obj);
        nodeInfo = {
          text: appTree.get_text(node.rslt.obj),
          parent: parent,
          id: node.rslt.obj.attr("id")
        };
        if (-1 === nodeInfo.parent) {
          productpnl.refresh(nodeInfo);
          return layout.showProductPanel();
        } else {
          nodeInfo.parent = {
            id: parent.attr('id'),
            text: appTree.get_text(parent)
          };
          apppnl.refresh(nodeInfo);
          return layout.showApplicationPanel();
        }
      });
    });
    $('#loading-container').remove();
    return {
      getSelected: function() {
        var appTree, parent, selectedNode;
        appTree = $.jstree._reference("#" + ids.navigateTree);
        selectedNode = appTree.get_selected();
        parent = appTree._get_parent(selectedNode);
        return {
          id: selectedNode.attr("id"),
          text: appTree.get_text(selectedNode),
          parent: -1 === parent ? parent : {
            id: parent.attr('id'),
            text: appTree.get_text(parent)
          }
        };
      },
      delApplictionBaseFromProductBase: function(appBaseId) {
        var appTree;
        appTree = $.jstree._reference("#" + ids.navigateTree);
        return (appTree._get_children(appTree.get_selected())).each(function(index, app) {
          if (parseInt(app.id) === appBaseId) {
            return appTree.delete_node(app);
          }
        });
      },
      addNewProductBase: function(product) {
        return ($.jstree._reference("#" + ids.navigateTree)).create_node(-1, "last", {
          data: product.name,
          attr: {
            id: product.id
          }
        });
      },
      addNewApplicationBase: function(params) {
        var appTree, selectedNode;
        appTree = $.jstree._reference("#" + ids.navigateTree);
        selectedNode = appTree.get_selected();
        return $("#appTree").jstree("create_node", selectedNode, "last", {
          data: params.appBaseName,
          attr: {
            id: params.appBaseId
          }
        });
      }
    };
  });

}).call(this);
