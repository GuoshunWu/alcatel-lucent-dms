// Generated by CoffeeScript 1.4.0
(function() {

  define(function(require) {
    var c18n, dialogs, exportAppOrDicts, grid, i18n, init, nodeSelectHandler, onShow, ready, urls, util;
    i18n = require('i18n!nls/transmng');
    c18n = require('i18n!nls/common');
    grid = require('transmng/trans_grid');
    dialogs = require('transmng/dialogs');
    util = require('dms-util');
    urls = require('dms-urls');
    nodeSelectHandler = function(node, nodeInfo) {
      var type;
      type = node.attr('type');
      if ('products' === type) {
        return;
      }
      $('#versionTypeLabel', "div[id='transmng']").text("" + nodeInfo.text);
      if ('product' === type) {
        if (typeof console !== "undefined" && console !== null) {
          console.log("product handler.");
        }
        $.getJSON(urls.prod_versions, {
          base: nodeInfo.id,
          prop: 'id,version'
        }, function(json) {
          return $('#selVersion', "div[id='transmng']").empty().append(util.json2Options(json)).trigger('change');
        });
        return;
      }
      if ('app' === type) {
        return typeof console !== "undefined" && console !== null ? console.log("app handler.") : void 0;
      }
    };
    onShow = function() {
      var gridParent;
      gridParent = $('.transGrid_parent');
      return $('#transGrid').setGridWidth(gridParent.width() - 10).setGridHeight(gridParent.height() - 110);
    };
    exportAppOrDicts = function(ftype) {
      var checkboxes, id, languages, type;
      id = $('#productRelease').val();
      if (!id) {
        return;
      }
      id = parseInt(id);
      if (-1 === id) {
        return;
      }
      checkboxes = $("#languageFilterDialog input:checkbox[name='languages']:checked");
      languages = checkboxes.map(function() {
        return this.id;
      }).get().join(',');
      type = $("input:radio[name='viewOption'][checked]").val();
      type = type.slice(0, 4);
      if (type[0] === 'a') {
        type = type.slice(0, 3);
      }
      $("#exportForm input[name='prod']").val(id);
      $("#exportForm input[name='language']").val(languages);
      $("#exportForm input[name='type']").val(type);
      if (ftype) {
        $("#exportForm input[name='type']").val(ftype);
      }
      return $("#exportForm").submit();
    };
    init = function() {
      if (typeof console !== "undefined" && console !== null) {
        console.debug("transmng panel init...");
      }
      $('#selVersion', "div[id='transmng']").change(function() {
        var nodeInfo, postData, type;
        if (!this.value || -1 === parseInt(this.value)) {
          return;
        }
        alert('version changed.');
        nodeInfo = (require('ptree')).getNodeInfo();
        if (typeof console !== "undefined" && console !== null) {
          console.log(nodeInfo);
        }
        type = nodeInfo.type;
        if (type.startWith('prod')) {
          type = type.slice(0, 4);
        }
        postData = {
          prop: 'id,name'
        };
        postData[type] = this.value;
        $.ajax({
          url: urls.languages,
          async: false,
          data: postData,
          dataType: 'json',
          success: function(languages) {
            var langTable;
            langTable = util.generateLanguageTable(languages);
            return $("#languageFilterDialog").empty().append(langTable);
          }
        });
        return dialogs.refreshGrid(false, grid);
      });
      $("#create").button().attr('privilegeName', util.urlname2Action('task/create-task')).click(function() {
        var info;
        info = grid.getTotalSelectedRowInfo();
        if (!info.rowIds.length) {
          $.msgBox(c18n.selrow.format(c18n[grid.getTableType()]), null, {
            title: c18n.warning
          });
          return;
        }
        return dialogs.taskDialog.dialog("open");
      });
      $('#languageFilter').button().click(function() {
        return dialogs.languageFilterDialog.dialog("open");
      });
      $(':radio[name=viewOption]').change(function() {
        return dialogs.refreshGrid(false, grid);
      });
      $("#exportTranslation").button().attr('privilegeName', util.urlname2Action('trans/export-translation-details')).click(function() {
        var info;
        info = grid.getTotalSelectedRowInfo();
        if (!info.rowIds.length) {
          $.msgBox(c18n.selrow.format(c18n[grid.getTableType()]), null, {
            title: c18n.warning
          });
          return;
        }
        return dialogs.exportTranslationDialog.dialog('open');
      });
      $("#exportExcel").click(function() {
        return exportAppOrDicts('excel');
      });
      return $("#exportPDF").click(function() {
        return exportAppOrDicts('pdf');
      });
    };
    ready = function() {
      onShow();
      return typeof console !== "undefined" && console !== null ? console.debug("transmng panel ready...") : void 0;
    };
    init();
    ready();
    return {
      onShow: onShow,
      nodeSelect: nodeSelectHandler
    };
  });

}).call(this);
