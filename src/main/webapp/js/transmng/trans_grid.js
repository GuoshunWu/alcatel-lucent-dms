// Generated by CoffeeScript 1.3.3
(function() {

  define(['jqgrid', 'util', 'require'], function($, util, require) {
    var grid, transGrid;
    ({
      common: {
        colNames: ['ID', 'Application', 'Version', 'Num of String'],
        colModel: [
          {
            name: 'id',
            index: 'id',
            width: 55,
            align: 'center',
            hidden: true,
            frozen: true
          }, {
            name: 'application',
            index: 'base.name',
            width: 100,
            editable: true,
            stype: 'select',
            edittype: 'select',
            align: 'center',
            frozen: true,
            searchoptions: {
              dataInit: function(elem) {
                return alert(elem);
              }
            },
            editoptions: {
              value: "All:All;0.00:0.00;12:12.00",
              defaultValue: 'All:All'
            }
          }, {
            name: 'numOfString',
            index: 'labelNum',
            width: 80,
            align: 'center',
            frozen: true
          }
        ]
      }
    });
    grid = {
      dictionary: {
        colNames: common.colNames(['Dictionary', 'Version', 'Encoding', 'Format']),
        colModel: [
          {
            name: 'id',
            index: 'id',
            width: 55,
            align: 'center',
            hidden: true,
            frozen: true
          }, {
            name: 'application',
            index: 'app.base.name',
            width: 100,
            editable: true,
            stype: 'select',
            edittype: 'select',
            align: 'center',
            editoptions: {
              value: "All:All;0.00:0.00;12:12.00"
            },
            frozen: true
          }, {
            name: 'appVersion',
            index: 'app.version',
            width: 90,
            editable: true,
            align: 'center',
            frozen: true
          }, {
            name: 'dictionary',
            index: 'base.name',
            width: 90,
            editable: true,
            align: 'center',
            frozen: true
          }, {
            name: 'dictVersion',
            index: 'version',
            width: 90,
            editable: true,
            align: 'center',
            frozen: true
          }, {
            name: 'encoding',
            index: 'encoding',
            width: 90,
            editable: true,
            align: 'center',
            frozen: true
          }, {
            name: 'format',
            index: 'format',
            width: 90,
            editable: true,
            align: 'center',
            frozen: true
          }, {
            name: 'numOfString',
            index: 'labelNum',
            width: 80,
            align: 'center',
            frozen: true
          }
        ]
      },
      application: {
        colNames: ['Dummy', 'ID', 'Application', 'Version', 'Num of String'],
        colModel: [
          {
            name: 'dummy',
            index: 'dummy',
            width: 55,
            align: 'center',
            hidden: true,
            frozen: true
          }, {
            name: 'id',
            index: 'id',
            width: 55,
            align: 'center',
            hidden: true,
            frozen: true
          }, {
            name: 'application',
            index: 'base.name',
            width: 100,
            editable: true,
            stype: 'select',
            edittype: 'select',
            align: 'center',
            frozen: true,
            searchoptions: {
              dataInit: function(elem) {
                return alert(elem);
              }
            },
            editoptions: {
              value: "All:All;0.00:0.00;12:12.00",
              defaultValue: 'All:All'
            }
          }, {
            name: 'appVersion',
            index: 'version',
            width: 90,
            editable: true,
            align: 'center',
            frozen: true
          }, {
            name: 'numOfString',
            index: 'labelNum',
            width: 80,
            align: 'center',
            frozen: true
          }
        ]
      }
    };
    transGrid = $("#transGridList").jqGrid({
      url: '',
      mtype: 'POST',
      postData: {},
      editurl: "",
      datatype: 'json',
      width: $(window).width() * 0.95,
      height: 300,
      shrinkToFit: false,
      rownumbers: true,
      loadonce: false,
      pager: '#taskPager',
      rowNum: 60,
      rowList: [10, 20, 30, 60, 120],
      sortname: 'base.name',
      sortorder: 'asc',
      viewrecords: true,
      gridview: true,
      multiselect: true,
      caption: 'Translation Task List',
      colNames: grid.dictionary.colNames,
      colModel: grid.dictionary.colModel,
      groupHeaders: [],
      afterCreate: function(grid) {
        grid.setGroupHeaders({
          useColSpanStyle: true,
          groupHeaders: grid.getGridParam('groupHeaders')
        });
        grid.filterToolbar({
          stringResult: true,
          searchOnEnter: false
        });
        grid.navGrid('#taskPager', {
          edit: false,
          add: false,
          del: false,
          search: false,
          view: false
        });
        grid.navButtonAdd("#taskPager", {
          caption: "Clear",
          title: "Clear Search",
          buttonicon: 'ui-icon-refresh',
          position: 'first',
          onClickButton: function() {
            return grid[0].clearToolbar();
          }
        });
        return grid.setFrozenColumns();
      }
    });
    transGrid.getGridParam('afterCreate')(transGrid);
    return {
      productReleaseChanged: function(param) {
        var eprop, gridParam, isApp, langugaeNames, postData, prop, summary, url;
        summary = ($(param.languages).map(function() {
          var _this;
          _this = this;
          return ($([0, 1, 2]).map(function() {
            return "s(" + _this.id + ")[" + this + "]";
          })).get().join(',');
        })).get().join(',');
        gridParam = transGrid.getGridParam();
        langugaeNames = ($(param.languages).map(function() {
          return this.name;
        })).get();
        isApp = param.level === "application";
        gridParam.colNames = isApp ? grid.application.colNames : grid.dictionary.colNames;
        gridParam.colModel = isApp ? grid.application.colModel : grid.dictionary.colModel;
        eprop = "id,app.base.name,app.version,base.name,version,base.encoding,base.format,labelNum,";
        if (isApp) {
          eprop = 'id,id,base.name,version,labelNum,';
        }
        prop = eprop + summary;
        postData = {
          prod: param.release.id,
          format: 'grid',
          prop: prop
        };
        url = isApp ? 'rest/applications' : 'rest/dict';
        return transGrid.updateTaskLanguage(langugaeNames, url, postData);
      },
      getTotalSelectedRowInfo: function() {
        var count, selectedRowIds;
        transGrid = $("#transGridList");
        selectedRowIds = transGrid.getGridParam('selarrrow');
        count = 0;
        $(selectedRowIds).each(function() {
          var row;
          row = $("#transGridList").getRowData(this);
          return count += parseInt(row.numOfString);
        });
        return {
          rowIds: selectedRowIds,
          selectedNum: selectedRowIds.length,
          totalLabels: count
        };
      },
      getTableType: function() {
        if (-1 === ($.inArray('Dummy', $("#transGridList").getGridParam('colNames')))) {
          return 'dict';
        } else {
          return 'app';
        }
      }
    };
  });

}).call(this);
