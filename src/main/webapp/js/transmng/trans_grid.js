// Generated by CoffeeScript 1.3.3
(function() {

  define(['jqgrid', 'require'], function($, require) {
    var transGrid;
    transGrid = $("#transGridList").jqGrid({
      url: '',
      mtype: 'POST',
      postData: {},
      editurl: "",
      datatype: 'json',
      width: $(window).width() * 0.95,
      height: 300,
      shrinkToFit: false,
      rownumbers: true,
      loadonce: false,
      pager: '#taskPager',
      rowNum: 10,
      rowList: [10, 20, 30],
      sortname: 'name',
      sortorder: 'asc',
      viewrecords: true,
      gridview: true,
      caption: 'Translation Task List',
      gridType: 'dictionary',
      colNames: ['ID', 'Application', 'Version', 'Dictionary', 'Version', 'Encoding', 'Format', 'Num of String', 'T', 'N', 'I', 'T', 'N', 'I', 'T', 'N', 'I'],
      colModel: [
        {
          name: 'id',
          index: 'id',
          width: 55,
          align: 'center',
          hidden: true,
          frozen: true
        }, {
          name: 'application',
          index: 'application',
          width: 100,
          editable: true,
          stype: 'select',
          edittype: 'select',
          align: 'center',
          editoptions: {
            value: "All:All;0.00:0.00;12:12.00"
          },
          frozen: true
        }, {
          name: 'appVersion',
          index: 'appVersion',
          width: 90,
          editable: true,
          align: 'center',
          frozen: true
        }, {
          name: 'dictionary',
          index: 'dictionary',
          width: 90,
          editable: true,
          align: 'center',
          frozen: true
        }, {
          name: 'dictVersion',
          index: 'dictVersion',
          width: 90,
          editable: true,
          align: 'center',
          frozen: true
        }, {
          name: 'encoding',
          index: 'encoding',
          width: 90,
          editable: true,
          align: 'center',
          frozen: true
        }, {
          name: 'format',
          index: 'format',
          width: 90,
          editable: true,
          align: 'center',
          frozen: true
        }, {
          name: 'numOfString',
          index: 'NumOfString',
          width: 80,
          align: 'center',
          frozen: true
        }, {
          name: 'Arabic.T',
          index: 'Arabic.T',
          width: 20,
          align: 'center'
        }, {
          name: 'Arabic.N',
          index: 'Arabic.N',
          width: 20,
          editable: true,
          align: 'center'
        }, {
          name: 'Arabic.I',
          index: 'Arabic.I',
          width: 20,
          editable: true,
          align: 'center'
        }, {
          name: 'Czech.T',
          index: 'Czech.T',
          width: 20,
          align: 'center'
        }, {
          name: 'Czech.N',
          index: 'Czech.N',
          width: 20,
          editable: true,
          align: 'center'
        }, {
          name: 'Czech.I',
          index: 'Czech.I',
          width: 20,
          editable: true,
          align: 'center'
        }, {
          name: 'Chinese.T',
          index: 'Chinese.T',
          width: 20,
          align: 'center'
        }, {
          name: 'Chinese.N',
          index: 'Chinese.N',
          width: 20,
          editable: true,
          align: 'center'
        }, {
          name: 'Chinese.I',
          index: 'Chinese.I',
          width: 20,
          editable: true,
          align: 'center'
        }
      ],
      groupHeaders: [
        {
          startColumnName: 'Arabic.T',
          numberOfColumns: 3,
          titleText: '<bold>Arabic</bold>'
        }, {
          startColumnName: 'Czech.T',
          numberOfColumns: 3,
          titleText: '<bold>Czech</bold>'
        }, {
          startColumnName: 'Chinese.T',
          numberOfColumns: 3,
          titleText: '<bold>Chinese</bold>'
        }
      ],
      afterCreate: function(grid) {
        grid.navButtonAdd("#taskPager", {
          caption: "Clear",
          title: "Clear Search",
          buttonicon: 'ui-icon-refresh',
          position: 'first',
          onClickButton: function() {
            return grid[0].clearToolbar();
          }
        });
        grid.setGroupHeaders({
          useColSpanStyle: true,
          groupHeaders: grid.getGridParam('groupHeaders')
        });
        return grid.navGrid('#taskPager', {
          edit: true,
          add: true,
          del: false,
          search: false,
          view: false
        });
      }
    });
    transGrid.getGridParam('afterCreate')(transGrid);
    $("#create").button().click(function() {
      return transGrid.updateTaskLanguage(['Japanese', 'Chinese', 'Indian'], 'json/taskgrid1.json');
    });
    return {
      productReleaseChanged: function(param) {
        var gridParam, index, prop;
        console.log("productReleaseChanged");
        prop += ($(param.languages).map(function() {
          var _this;
          _this = this;
          return ($([0, 1, 2]).map(function() {
            return "s(" + _this.id + ")[" + this + "]";
          })).get().join(',');
        })).get().join(',');
        gridParam = transGrid.getGridParam();
        if (param.level === "app") {
          console.log("Application level");
          if (gridParam.gridType === "dictionary") {
            index = (gridParam.colNames.indexOf('Dictionary')) + 1;
            gridParam.colNames = gridParam.colNames.slice(0, index).concat(gridParam.colNames.slice(index + 1, gridParam.colNames.length));
            gridParam.colNames = $.grep(gridParam.colNames, function(val, key) {
              return val !== 'Dictionary' && val !== 'Encoding' && val !== 'Format';
            });
            gridParam.colModel = $.grep(gridParam.colModel, function(val, key) {
              var _ref;
              return (_ref = val.name) !== 'dictionary' && _ref !== 'dictVersion' && _ref !== 'encoding' && _ref !== 'format';
            });
            gridParam.gridType = "application";
          }
          return transGrid.updateTaskLanguage(($(param.languages).map(function() {
            return this.name;
          })).get(), 'json/taskgrid.json');
        } else {
          prop = "id,app.base.name,base.name,encoding,format,labelNum," + prop;
          console.log("Dictionary level");
          if (gridParam.gridType === "application") {
            gridParam.colNames = ['ID', 'Application', 'Version', 'Dictionary', 'Version', 'Encoding', 'Format', 'Num of String'];
            $.merge(gridParam.colModel, [
              {
                name: 'dictionary',
                index: 'dictionary',
                width: 90,
                editable: true,
                align: 'center',
                frozen: true
              }, {
                name: 'dictVersion',
                index: 'dictVersion',
                width: 90,
                editable: true,
                align: 'center',
                frozen: true
              }, {
                name: 'encoding',
                index: 'encoding',
                width: 90,
                editable: true,
                align: 'center',
                frozen: true
              }, {
                name: 'format',
                index: 'format',
                width: 90,
                editable: true,
                align: 'center',
                frozen: true
              }
            ]);
            gridParam.gridType = "dictionary";
          }
          return transGrid.updateTaskLanguage(($(param.languages).map(function() {
            return this.name;
          })).get(), 'json/taskgrid.json');
        }
      }
    };
  });

}).call(this);
