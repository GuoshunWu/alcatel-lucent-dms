// Generated by CoffeeScript 1.3.3
(function() {

  define(['jqlayout', 'jquery', 'i18n!nls/transmng', 'transmng/trans_grid', 'module'], function($, jq, i18n, grid, module) {
    var ids, initPage;
    ids = {
      container: {
        page: 'optional-container'
      }
    };
    initPage = function() {
      var languageFilterDialog, languageFilterDialogId, languageFilterTable, languageFilterTableId, pageLayout;
      pageLayout = $("#" + ids.container.page).layout({
        resizable: true,
        closable: true
      });
      $.getJSON('rest/products/trans/productbases', {}, function(json) {
        $('#productBase').append(new Option("" + i18n.select.producttip, -1));
        $('#productBase').append($(json).map(function() {
          return new Option(this.name, this.id);
        }));
        return $('#productBase').change(function() {
          $('#productRelease').empty();
          if (parseInt($('#productBase').val()) === -1) {
            return false;
          }
          return $.getJSON("rest/products/" + ($('#productBase').val()), {}, function(json) {
            $('#productRelease').append($(json).map(function() {
              return new Option(this.version, this.id);
            }));
            return $('#productRelease').trigger("change");
          });
        });
      });
      $('#productRelease').change(function() {
        var param;
        param = {
          release: {
            id: $(this).val(),
            version: $(this).find("option:selected").text()
          },
          languages: ($(":checkbox[name='languages']", languageFilterTable).map(function() {
            if (this.checked) {
              return {
                id: this.id,
                checked: this.checked,
                name: this.value
              };
            }
          })).get(),
          level: $(":radio[name='viewOption'][checked]").val()
        };
        return grid.productReleaseChanged(param);
      });
      languageFilterTableId = 'languageFilterTable';
      languageFilterDialogId = 'languageFilterDialog';
      languageFilterTable = $("<table id='" + languageFilterTableId + "' align='center' border='0'></table>");
      languageFilterDialog = $("<div title='" + i18n.select.languagefilter.title + "' id='" + languageFilterDialogId + "'>").dialog({
        autoOpen: false,
        position: [23, 126],
        width: 950,
        show: {
          effect: 'slide',
          direction: "up"
        },
        create: function() {
          var checkedAll;
          checkedAll = $("<input type='checkbox' checked='checked' id='checkedAll'><label for='checkedAll'>All</label>");
          checkedAll.change(function() {
            return $(":checkbox[name='languages']", languageFilterTable).attr('checked', this.checked);
          });
          return checkedAll.appendTo($('div.ui-dialog-buttonpane'));
        },
        buttons: {
          'OK': function() {
            $('#productRelease').trigger("change");
            return $(this).dialog("close");
          },
          'Cancel': function() {
            return $(this).dialog("close");
          }
        }
      });
      languageFilterDialog.append(languageFilterTable);
      $.getJSON('rest/languages', {}, function(json) {
        var languages;
        languages = $(json).map(function() {
          return $("<td><input type='checkbox' checked value=" + this.name + " name='languages' id=" + this.id + " /><label for=" + this.id + ">" + this.name + "</label></td>").css('width', '180px');
        });
        return languages.each(function(index) {
          if (0 === index % 5) {
            $("<tr/>").appendTo(languageFilterTable);
          }
          return this.appendTo($("tr:eq(" + (Math.floor(index / 5)) + ")", languageFilterTable));
        });
      });
      return $('#languageFilter').button().click(function() {
        return $("#" + languageFilterDialogId).dialog("open");
      });
    };
    initPage();
    return {
      name: 'layout',
      getSelectedLanguages: function() {
        return $(":checkbox[name='languages']", languageFilterTable).map(function() {
          if (this.checked) {
            return {
              id: this.id,
              checked: this.checked,
              name: this.value
            };
          }
        });
      }
    };
  });

}).call(this);
