// Generated by CoffeeScript 1.3.3
(function() {

  define(['jqgrid', 'util', 'require', 'i18n!nls/transmng'], function($, util, require, i18n) {
    var transDetailGrid;
    transDetailGrid = $("#transDetailGridList").jqGrid({
      url: 'json/transdetailgrid.json',
      mtype: 'POST',
      postData: {},
      editurl: "",
      datatype: 'json',
      width: 'auto',
      height: 200,
      shrinkToFit: false,
      rownumbers: true,
      loadonce: false,
      pager: '#transDetailsPager',
      rowNum: 60,
      rowList: [10, 20, 30, 60, 120],
      sortname: 'key',
      sortorder: 'asc',
      viewrecords: true,
      gridview: true,
      multiselect: true,
      cellEdit: true,
      cellurl: 'http://127.0.0.1:2000',
      colNames: ['Label', 'Max Length', 'Context', 'Reference language', 'Translation', 'Status'],
      colModel: [
        {
          name: 'key',
          index: 'key',
          width: 100,
          editable: false,
          stype: 'select',
          align: 'left',
          frozen: true
        }, {
          name: 'maxlen',
          index: 'maxlen',
          width: 90,
          editable: true,
          align: 'right',
          frozen: true,
          search: false
        }, {
          name: 'context',
          index: 'context',
          width: 80,
          align: 'left',
          frozen: true,
          search: false
        }, {
          name: 'reflang',
          index: 'reflang',
          width: 150,
          align: 'left',
          frozen: true,
          search: false
        }, {
          name: 'trans',
          index: 'trans',
          width: 150,
          align: 'left',
          search: false
        }, {
          name: 'status',
          index: 'status',
          width: 150,
          align: 'left',
          editable: true,
          edittype: 'select',
          editoptions: {
            value: "0:" + i18n.trans.nottranslated + ";1:" + i18n.trans.inprogress + ";2:" + i18n.trans.translated
          },
          formatter: 'select'
        }
      ],
      beforeSubmitCell: function(rowid, cellname, value, iRow, iCol) {},
      afterSubmitCell: function(serverresponse, rowid, cellname, value, iRow, iCol) {
        var jsonFromServer;
        jsonFromServer = eval('(' + serverresponse.responseText + ')');
        return [0 === jsonFromServer.status, jsonFromServer.message];
      },
      afterCreate: function(grid) {
        return grid.navGrid('#transDetailsPager', {
          edit: false,
          add: false,
          del: false,
          search: false,
          view: false
        });
      }
    });
    transDetailGrid.getGridParam('afterCreate')(transDetailGrid);
    return {
      languageChanged: function(param) {
        var prop, url;
        transDetailGrid = $("#transDetailGridList");
        url = "/rest/labels";
        prop = "key,maxLength,context.name,reference,ct.translation,ct.status";
        return transDetailGrid.setGridParam({
          url: url,
          datatype: "json",
          postData: {
            dict: param.dict.id,
            language: param.language.id,
            format: 'grid',
            prop: prop,
            idprop: 'ct.id'
          }
        }).trigger("reloadGrid");
      }
    };
  });

}).call(this);
