<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><meta name="language" content="en"/><title>Complex Layout Demo</title><!-- DEMO styles - specific to this page --><link rel="stylesheet" type="text/css" href="../css/jqueryLayout/complex.css"/><!--[if lte IE 7]><style type="text/css"> body {    font-size: 85%;} </style><![endif]--><script type="text/javascript" src="../js/lib/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../js/lib/jquery-ui-1.10.3.custom.min.js"></script><script type="text/javascript" src="../js/lib/jquery.layout-latest.min.js"></script><script type="text/javascript" src="../js/lib/complex.js"></script><script type="text/javascript" src="../js/lib/debug.js"></script><script type="text/javascript">/* * complex.html * * This is a demonstration page for the jQuery layout widget * *	NOTE: For best code readability, view this with a fixed-space font and tabs equal to 4-chars */var outerLayout, innerLayout;/* *####################### *     ON PAGE LOAD *####################### */$(document).ready( function() {    outerLayout = $("body").layout( layoutSettings_Outer );    var westSelector = "body > .ui-layout-west"; // outer-west pane    var eastSelector = "body > .ui-layout-east"; // outer-east pane    // CREATE SPANs for pin-buttons - using a generic class as identifiers    $("<span></span>").addClass("pin-button").prependTo( westSelector );    $("<span></span>").addClass("pin-button").prependTo( eastSelector );    // BIND events to pin-buttons to make them functional    outerLayout.addPinBtn( westSelector +" .pin-button", "west");    outerLayout.addPinBtn( eastSelector +" .pin-button", "east" );    // CREATE SPANs for close-buttons - using unique IDs as identifiers    $("<span></span>").attr("id", "west-closer" ).prependTo( westSelector );    $("<span></span>").attr("id", "east-closer").prependTo( eastSelector );    // BIND layout events to close-buttons to make them functional    outerLayout.addCloseBtn("#west-closer", "west");    outerLayout.addCloseBtn("#east-closer", "east");});var layoutSettings_Outer = {    name: "outerLayout" // NO FUNCTIONAL USE, but could be used by custom code to 'identify' a layout    // options.defaults apply to ALL PANES - but overridden by pane-specific settings    ,	defaults: {        size:					"auto"        ,	minSize:				50        ,	paneClass:				"pane" 		// default = 'ui-layout-pane'        ,	resizerClass:			"resizer"	// default = 'ui-layout-resizer'        ,	togglerClass:			"toggler"	// default = 'ui-layout-toggler'        ,	buttonClass:			"button"	// default = 'ui-layout-button'        ,	contentSelector:		".content"	// inner div to auto-size so only it scrolls, not the entire pane!        ,	contentIgnoreSelector:	"span"		// 'paneSelector' for content to 'ignore' when measuring room for content        ,	togglerLength_open:		35			// WIDTH of toggler on north/south edges - HEIGHT on east/west edges        ,	togglerLength_closed:	35			// "100%" OR -1 = full height        ,	hideTogglerOnSlide:		true		// hide the toggler when pane is 'slid open'        ,	togglerTip_open:		"Close This Pane"        ,	togglerTip_closed:		"Open This Pane"        ,	resizerTip:				"Resize This Pane"        //	effect defaults - overridden on some panes        ,	fxName:					"slide"		// none, slide, drop, scale        ,	fxSpeed_open:			750        ,	fxSpeed_close:			1500        ,	fxSettings_open:		{ easing: "easeInQuint" }        ,	fxSettings_close:		{ easing: "easeOutQuint" }    }    ,	north: {        spacing_open:			1			// cosmetic spacing        ,	togglerLength_open:		0			// HIDE the toggler button        ,	togglerLength_closed:	-1			// "100%" OR -1 = full width of pane        ,	resizable: 				false        ,	slidable:				false        //	override default effect        ,	fxName:					"none"    }    ,	south: {        maxSize:				200        ,	spacing_closed:			0			// HIDE resizer & toggler when 'closed'        ,	slidable:				false		// REFERENCE - cannot slide if spacing_closed = 0        ,	initClosed:				true        //	CALLBACK TESTING...        ,	onhide_start:			function () { return confirm("START South pane hide \n\n onhide_start callback \n\n Allow pane to hide?"); }        ,	onhide_end:				function () { alert("END South pane hide \n\n onhide_end callback"); }        ,	onshow_start:			function () { return confirm("START South pane show \n\n onshow_start callback \n\n Allow pane to show?"); }        ,	onshow_end:				function () { alert("END South pane show \n\n onshow_end callback"); }        ,	onopen_start:			function () { return confirm("START South pane open \n\n onopen_start callback \n\n Allow pane to open?"); }        ,	onopen_end:				function () { alert("END South pane open \n\n onopen_end callback"); }        ,	onclose_start:			function () { return confirm("START South pane close \n\n onclose_start callback \n\n Allow pane to close?"); }        ,	onclose_end:			function () { alert("END South pane close \n\n onclose_end callback"); }        //,	onresize_start:			function () { return confirm("START South pane resize \n\n onresize_start callback \n\n Allow pane to be resized?)"); }        ,	onresize_end:			function () { alert("END South pane resize \n\n onresize_end callback \n\n NOTE: onresize_start event was skipped."); }    }    ,	west: {        size:					250        ,	spacing_closed:			21			// wider space when closed        ,	togglerLength_closed:	21			// make toggler 'square' - 21x21        ,	togglerAlign_closed:	"top"		// align to top of resizer        ,	togglerLength_open:		0			// NONE - using custom togglers INSIDE west-pane        ,	togglerTip_open:		"Close West Pane"        ,	togglerTip_closed:		"Open West Pane"        ,	resizerTip_open:		"Resize West Pane"        ,	slideTrigger_open:		"click" 	// default        ,	initClosed:				true        //	add 'bounce' option to default 'slide' effect        ,	fxSettings_open:		{ easing: "easeOutBounce" }    }    ,	east: {        size:					250        ,	spacing_closed:			21			// wider space when closed        ,	togglerLength_closed:	21			// make toggler 'square' - 21x21        ,	togglerAlign_closed:	"top"		// align to top of resizer        ,	togglerLength_open:		0 			// NONE - using custom togglers INSIDE east-pane        ,	togglerTip_open:		"Close East Pane"        ,	togglerTip_closed:		"Open East Pane"        ,	resizerTip_open:		"Resize East Pane"        ,	slideTrigger_open:		"mouseover"        ,	initClosed:				true        //	override default effect, speed, and settings        ,	fxName:					"drop"        ,	fxSpeed:				"normal"        ,	fxSettings:				{ easing: "" } // nullify default easing    }    ,	center: {        paneSelector:			"#mainContent" 			// sample: use an ID to select pane instead of a class        ,	minWidth:				200        ,	minHeight:				200    }};</script></head><body><div class="ui-layout-west">    <div class="header">Outer - West - Test</div>    <div class="content">        <h3><b>Outer Layout</b></h3>        <ul>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>            <li>Hello</li>        </ul>    </div></div><div class="ui-layout-east">    <div class="header">Outer - East</div>    <div class="subhead">I'm a subheader</div>    <div class="content">        <h3><b>Inner Layout</b></h3>        <ul id="createInner">            <li><a href="#" onClick="createInnerLayout(); return false;">CREATE Inner Layout</a></li>        </ul>        <ul id="innerCommands" style="display: none;">            <li><a href="#" onClick="innerLayout.toggle('north')">Toggle North</a></li>            <li><a href="#" onClick="innerLayout.toggle('south')">Toggle South</a></li>            <li><a href="#" onClick="innerLayout.toggle('west')"> Toggle West</a></li>            <li><a href="#" onClick="innerLayout.toggle('east')"> Toggle East</a></li>            <li><a href="#" onClick="innerLayout.hide('north')">Hide North</a></li>            <li><a href="#" onClick="innerLayout.hide('south')">Hide South</a></li>            <li><a href="#" onClick="innerLayout.hide('west')"> Hide West</a></li>            <li><a href="#" onClick="innerLayout.hide('east')"> Hide East</a></li>            <li><a href="#" onClick="innerLayout.show('east')"> Show East</a></li>            <li><a href="#" onClick="innerLayout.sizePane('north', 50); innerLayout.open('north')"> Resize North=50</a>            </li>            <li><a href="#" onClick="innerLayout.sizePane('north', 300); innerLayout.open('north')"> Resize                North=300</a></li>            <li><a href="#" onClick="innerLayout.sizePane('north', 10000); innerLayout.open('north')">Resize                North=10000</a></li>            <li><a href="#" onClick="innerLayout.sizePane('south', 50); innerLayout.open('south')"> Resize South=50</a>            </li>            <li><a href="#" onClick="innerLayout.sizePane('south', 300); innerLayout.open('south')"> Resize                South=300</a></li>            <li><a href="#" onClick="innerLayout.sizePane('south', 10000); innerLayout.open('south')">Resize                South=10000</a></li>            <li><a href="#" onClick="innerLayout.panes.north.css('backgroundColor','#FCC')">North Color = Red</a></li>            <li><a href="#" onClick="innerLayout.panes.north.css('backgroundColor','#CFC')">North Color = Green</a></li>            <li><a href="#" onClick="innerLayout.panes.north.css('backgroundColor','')"> North Color = Default</a></li>            <li><a href="#" onClick="alert('innerLayout.name = \''+innerLayout.options.name+'\'')">Show Layout Name</a>            </li>            <li><a href="#" onClick="showOptions(innerLayout,'defaults')">Show Options.Defaults</a></li>            <li><a href="#" onClick="showOptions(innerLayout,'north')"> Show Options.North</a></li>            <li><a href="#" onClick="showOptions(innerLayout,'south')"> Show Options.South</a></li>            <li><a href="#" onClick="showOptions(innerLayout,'west')"> Show Options.West</a></li>            <li><a href="#" onClick="showOptions(innerLayout,'east')"> Show Options.East</a></li>            <li><a href="#" onClick="showOptions(innerLayout,'center')"> Show Options.Center</a></li>            <li><a href="#" onClick="showState(innerLayout,'container')"> Show State.Container</a></li>            <li><a href="#" onClick="showState(innerLayout,'north')"> Show State.North</a></li>            <li><a href="#" onClick="showState(innerLayout,'south')"> Show State.South</a></li>            <li><a href="#" onClick="showState(innerLayout,'west')"> Show State.West</a></li>            <li><a href="#" onClick="showState(innerLayout,'east')"> Show State.East</a></li>            <li><a href="#" onClick="showState(innerLayout,'center')"> Show State.Center</a></li>        </ul>    </div>    <div class="footer">I'm a footer</div>    <div class="footer">I'm another footer</div>    <div class="footer">Unlimited headers &amp; footers</div></div><div id="mainContent">   Hello</div></body></html> 