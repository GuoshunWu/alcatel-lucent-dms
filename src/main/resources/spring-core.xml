<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
">

    <!-- 	<bean id="sessionFactory"
         class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"> -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="configLocation">
            <value>classpath:hibernate.cfg.xml</value>
        </property>
    </bean>

    <bean id="transactionManager" scope="singleton"
          class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory">
            <ref local="sessionFactory"/>
        </property>
    </bean>

    <!--&lt;!&ndash; the transactional advice (what 'happens'; see the <aop:advisor/> bean below) &ndash;&gt;-->
    <!--<tx:advice id="txAdvice" transaction-manager="transactionManager">-->
    <!--&lt;!&ndash; the transactional semantics... &ndash;&gt;-->
    <!--<tx:attributes>-->
    <!--&lt;!&ndash; all methods starting with 'get' are read-only &ndash;&gt;-->
    <!--<tx:method name="retrieve*" read-only="true"/>-->
    <!--&lt;!&ndash; other methods use the default transaction settings (see below) &ndash;&gt;-->
    <!--<tx:method name="*" isolation="DEFAULT" propagation="REQUIRED" timeout="-1" rollback-for="com.alcatel_lucent.dms.BusinessException"/>-->
    <!--</tx:attributes>-->
    <!--</tx:advice>-->
    <!--&lt;!&ndash; ensure that the above transactional advice runs for any execution-->
    <!--of an operation defined by the FooService interface &ndash;&gt;-->
    <!--<aop:config>-->
    <!--<aop:pointcut id="serviceOperation" expression="execution(* com.alcatel_lucent.dms.service.TextService.*.*(..)) "   />-->
    <!--<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation"/>-->
    <!--</aop:config>-->


    <bean id="matchAllWithPropReq"
          class="org.springframework.transaction.interceptor.MatchAlwaysTransactionAttributeSource">
        <property name="transactionAttribute">
            <value>PROPAGATION_REQUIRED</value>
        </property>
        
    </bean>

    <bean id="matchAllTxInterceptor"
          class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <property name="transactionAttributeSource">
            <ref bean="matchAllWithPropReq"/>
        </property>
    </bean>

    <bean id="hibInterceptor" class="org.springframework.orm.hibernate3.HibernateInterceptor">
        <property name="sessionFactory">
            <ref bean="sessionFactory"/>
        </property>
    </bean>


    <!-- One BeanNameAutoProxyCreator handles all beans where we want all methods
         to use PROPAGATION_REQUIRED -->
    <bean id="autoProxyCreator"
          class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
        <property name="interceptorNames">
            <list>
                <idref local="matchAllTxInterceptor"/>
                <idref bean="hibInterceptor"/>
            </list>
        </property>
        <property name="beanNames">
            <list>
                <idref bean="daoService"/>
                <idref bean="dictionaryService"/>
                <idref bean="textService"/>
                <idref bean="languageService"/>
                <idref bean="productService"/>
                <idref bean="jsonService"/>
                <idref bean="productREST"/>
                <!--<idref bean="myTest"/>-->
            </list>
        </property>
    </bean>

</beans>